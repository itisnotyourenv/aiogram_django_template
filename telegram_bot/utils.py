from typing import Dict, List


async def prepare_user_data(data: dict) -> Dict[str, str]:
    """
    Function prepares user data for sending to the server.
    –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–π –æ—Ç–ø—Ä–∞–≤–∫–∏ –Ω–∞ —Å–µ—Ä–≤–µ—Ä Django –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –≤ –ë–î.
    :param data: types.Message.to_python()
    """
    correct_dict = {
        'user_id': data.get('id'),
        'username': data.get('username', ''),
        'first_name': data.get('first_name'),
        'last_name': data.get('last_name', ''),
        'language_code': data.get('language_code'),
    }
    return correct_dict


async def prepare_users_list(data: list) -> List:
    """
    –§—É–Ω—Ü–∫–∏—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç –æ—Ç–≤–µ—Ç —Å–æ —Å–ø–∏—Å–∫–æ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ HTML —Ñ–æ—Ä–º–∞—Ç —Å –ª–∏–Ω–∫–æ–º –Ω–∞ –∫–∞–∂–¥–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    :param data: —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.
    """
    users = []
    users.extend(
        [f'üë§<a href="tg://user?id={i["user_id"]}">{i["first_name"]} {i.get("last_name", " ")}</a>' for i in data]
    )
    return users


async def prepare_user_detail(data: dict) -> str:
    """
    –§—É–Ω–∫—Ü–∏—è –ø–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ—Ç –æ—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    :param data: –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
    """
    answer = [f'{key}: {value}' for key, value in data.items()]
    return '\n'.join(answer)
